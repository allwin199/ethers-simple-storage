const { ethers } = require("ethers");
const fs = require("fs");

// check also sampleDeploy for more info
const main = async () => {
    const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL);
    const privateKey = process.env.PRIVATE_KEY;
    const wallet = new ethers.Wallet(privateKey, provider);

    // get contract files
    const abi = fs.readFileSync(
        "./SimpleStorage_sol_SimpleStorage.abi",
        "utf8"
    );
    const binary = fs.readFileSync(
        "./SimpleStorage_sol_SimpleStorage.bin",
        "utf8"
    );

    const contractFactory = new ethers.ContractFactory(abi, binary, wallet);
    console.log("Deploying, Please Wait...........");
    const contract = await contractFactory.deploy();

    // deploy() can be customised
    // const contract = await contractFactory.deploy({gasPrice: 1000000000});
    // we can also override gasLmit or etc.

    const transactionReceipt = await contract.deployTransaction.wait(1);

    // console.log("Here is the deployment transaction: ");
    // console.log(contract.deployTransaction);

    // when we wait for 1 block confirmations we will get transaction receipt
    // console.log("Here is the transaction receipt: ");
    console.log("Contract", transactionReceipt);

    /////////////////////////////////////////////////////////////////
    //         Sending a "raw" Transaction in Ethers.js            //
    /////////////////////////////////////////////////////////////////

    // const nonce = await wallet.getTransactionCount();
    // const tx = {
    //     nonce,
    //     gasPrice: "20000000000",
    //     gasLimit: 1000000,
    //     to: null,
    //     value: 0, // because this is contract creation
    //     data: "0x608060405234801561000f575f80fd5b506108f28061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80632ebce631146100595780636057361d1461008a5780636f760f41146100a65780638516fb22146100c2578063cd82f6d5146100f2575b5f80fd5b610073600480360381019061006e91906102cb565b610110565b60405161008192919061038f565b60405180910390f35b6100a4600480360381019061009f91906102cb565b6101c5565b005b6100c060048036038101906100bb91906104e9565b6101ce565b005b6100dc60048036038101906100d79190610543565b610252565b6040516100e9919061058a565b60405180910390f35b6100fa61027f565b604051610107919061058a565b60405180910390f35b6001818154811061011f575f80fd5b905f5260205f2090600202015f91509050805f015490806001018054610144906105d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610170906105d0565b80156101bb5780601f10610192576101008083540402835291602001916101bb565b820191905f5260205f20905b81548152906001019060200180831161019e57829003601f168201915b5050505050905082565b805f8190555050565b6001604051806040016040528083815260200184815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f01556020820151816001019081610228919061079d565b5050508060028360405161023c91906108a6565b9081526020016040518091039020819055505050565b6002818051602081018201805184825260208301602085012081835280955050505050505f915090505481565b5f8054905090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6102aa81610298565b81146102b4575f80fd5b50565b5f813590506102c5816102a1565b92915050565b5f602082840312156102e0576102df610290565b5b5f6102ed848285016102b7565b91505092915050565b6102ff81610298565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561033c578082015181840152602081019050610321565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61036182610305565b61036b818561030f565b935061037b81856020860161031f565b61038481610347565b840191505092915050565b5f6040820190506103a25f8301856102f6565b81810360208301526103b48184610357565b90509392505050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103fb82610347565b810181811067ffffffffffffffff8211171561041a576104196103c5565b5b80604052505050565b5f61042c610287565b905061043882826103f2565b919050565b5f67ffffffffffffffff821115610457576104566103c5565b5b61046082610347565b9050602081019050919050565b828183375f83830152505050565b5f61048d6104888461043d565b610423565b9050828152602081018484840111156104a9576104a86103c1565b5b6104b484828561046d565b509392505050565b5f82601f8301126104d0576104cf6103bd565b5b81356104e084826020860161047b565b91505092915050565b5f80604083850312156104ff576104fe610290565b5b5f83013567ffffffffffffffff81111561051c5761051b610294565b5b610528858286016104bc565b9250506020610539858286016102b7565b9150509250929050565b5f6020828403121561055857610557610290565b5b5f82013567ffffffffffffffff81111561057557610574610294565b5b610581848285016104bc565b91505092915050565b5f60208201905061059d5f8301846102f6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105e757607f821691505b6020821081036105fa576105f96105a3565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261065c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610621565b6106668683610621565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6106a161069c61069784610298565b61067e565b610298565b9050919050565b5f819050919050565b6106ba83610687565b6106ce6106c6826106a8565b84845461062d565b825550505050565b5f90565b6106e26106d6565b6106ed8184846106b1565b505050565b5b81811015610710576107055f826106da565b6001810190506106f3565b5050565b601f8211156107555761072681610600565b61072f84610612565b8101602085101561073e578190505b61075261074a85610612565b8301826106f2565b50505b505050565b5f82821c905092915050565b5f6107755f198460080261075a565b1980831691505092915050565b5f61078d8383610766565b9150826002028217905092915050565b6107a682610305565b67ffffffffffffffff8111156107bf576107be6103c5565b5b6107c982546105d0565b6107d4828285610714565b5f60209050601f831160018114610805575f84156107f3578287015190505b6107fd8582610782565b865550610864565b601f19841661081386610600565b5f5b8281101561083a57848901518255600182019150602085019450602081019050610815565b868310156108575784890151610853601f891682610766565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f61088082610305565b61088a818561086c565b935061089a81856020860161031f565b80840191505092915050565b5f6108b18284610876565b91508190509291505056fea26469706673582212209c18583b3a56090c2c65a1f2dbc06bfa5ef69ef6ef522ffb4f2036017feb584364736f6c63430008140033",
    //     chainId: 31337,
    // };
    // // const signedTxResponse = await wallet.signTransaction(tx);
    // const sendTxResponse = await wallet.sendTransaction(tx);
    // await sendTxResponse.wait(1);
    // console.log(sendTxResponse);
};

main()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error);
        process.exit(1);
    });

// Ethers js helps us to interact with the blockchain.
